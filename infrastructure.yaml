AWSTemplateFormatVersion: "2010-09-09"
Description: >
  CloudFormation template to create IAM groups and users with console access.
  Includes S3 read-only group, EC2 read-only group, and temporary password in Secrets Manager.

Parameters:
  S3GroupName:
    Type: String
    Default: S3ReadOnlyGroup
    Description: Name of the S3 IAM group

  EC2GroupName:
    Type: String
    Default: EC2ReadOnlyGroup
    Description: Name of the EC2 IAM group

  S3UserName:
    Type: String
    Default: s3-user
    Description: Name of IAM user for S3

  EC2UserName:
    Type: String
    Default: ec2-user
    Description: Name of IAM user for EC2

Resources:
  # -------------------------------
  # 1. Secrets Manager entry
  # -------------------------------
  OneTimePasswordSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: OneTimePassword
      Description: Temporary console password for IAM users
      GenerateSecretString:
        PasswordLength: 12
        ExcludePunctuation: true
        RequireEachIncludedType: true

  # -------------------------------
  # 2. IAM Groups with Policies
  # -------------------------------
  S3ReadOnlyGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Ref S3GroupName
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      Policies:
        - PolicyName: AllowChangeOwnPassword
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: iam:ChangePassword
                Resource: !Sub
                  - arn:aws:iam::${AWS::AccountId}:user/${username}
                  - { username: '${aws:username}' }

  EC2ReadOnlyGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Ref EC2GroupName
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
      Policies:
        - PolicyName: AllowChangeOwnPassword
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: iam:ChangePassword
                Resource: !Sub
                  - arn:aws:iam::${AWS::AccountId}:user/${username}
                  - { username: '${aws:username}' }

  # -------------------------------
  # 3. IAM Users
  # -------------------------------
  S3User:
    Type: AWS::IAM::User
    Properties:
      UserName: !Ref S3UserName
      Groups:
        - !Ref S3ReadOnlyGroup
      LoginProfile:
        Password: !Sub "{{resolve:secretsmanager:${OneTimePasswordSecret}::SecretString}}"
        PasswordResetRequired: true

  EC2User:
    Type: AWS::IAM::User
    Properties:
      UserName: !Ref EC2UserName
      Groups:
        - !Ref EC2ReadOnlyGroup
      LoginProfile:
        Password: !Sub "{{resolve:secretsmanager:${OneTimePasswordSecret}::SecretString}}"
        PasswordResetRequired: true

Outputs:
  S3GroupNameOutput:
    Description: Name of the S3 group
    Value: !Ref S3ReadOnlyGroup

  EC2GroupNameOutput:
    Description: Name of the EC2 group
    Value: !Ref EC2ReadOnlyGroup

  S3UserOutput:
    Description: IAM user for S3 access
    Value: !Ref S3User

  EC2UserOutput:
    Description: IAM user for EC2 access
    Value: !Ref EC2User

  OneTimePasswordSecretArn:
    Description: ARN of the secret storing the temporary password
    Value: !Ref OneTimePasswordSecret
