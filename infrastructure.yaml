AWSTemplateFormatVersion: "2010-09-09"
Description: >
  GitSync-ready CloudFormation template that creates:
  - One shared OTP in Secrets Manager
  - S3 & EC2 read-only groups
  - Two IAM console users (s3-user, ec2-user) assigned to the right groups
  - First-login password reset

Parameters:
  S3GroupName:
    Type: String
    Default: S3ReadOnlyGroup
    Description: Name of the S3 IAM group

  EC2GroupName:
    Type: String
    Default: EC2ReadOnlyGroup
    Description: Name of the EC2 IAM group

  S3UserName:
    Type: String
    Default: s3-user
    Description: Name of IAM user for S3

  EC2UserName:
    Type: String
    Default: ec2-user
    Description: Name of IAM user for EC2

  PasswordLength:
    Type: Number
    Default: 16
    MinValue: 12
    MaxValue: 30
    Description: Length of the autogenerated one-time password

Resources:
  # -------------------------------
  # 1) One shared OTP in Secrets Manager
  # -------------------------------
  OneTimePasswordSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: One-time password used for initial console login for all users
      GenerateSecretString:
        # Must be valid JSON. We only need a "password" key; the value is auto-generated.
        SecretStringTemplate: '{}'
        GenerateStringKey: password
        PasswordLength: !Ref PasswordLength
        # Keep commonly-problematic characters out to avoid login/escape issues
        ExcludeCharacters: "\"@/\\"
        RequireEachIncludedType: true

  # -------------------------------
  # 2) IAM Groups with read-only policies + self password change
  # -------------------------------
  S3ReadOnlyGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Ref S3GroupName
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      Policies:
        - PolicyName: AllowChangeOwnPassword
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: iam:ChangePassword
                # Use mapping form of !Sub so ${aws:username} is passed through literally for IAM to resolve
                Resource: !Sub
                  - arn:aws:iam::${AWS::AccountId}:user/${username}
                  - { username: '${aws:username}' }

  EC2ReadOnlyGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Ref EC2GroupName
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
      Policies:
        - PolicyName: AllowChangeOwnPassword
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: iam:ChangePassword
                Resource: !Sub
                  - arn:aws:iam::${AWS::AccountId}:user/${username}
                  - { username: '${aws:username}' }

  # -------------------------------
  # 3) IAM Users with console access, using the shared OTP, forced reset
  # -------------------------------
  S3User:
    Type: AWS::IAM::User
    Properties:
      UserName: !Ref S3UserName
      Groups:
        - !Ref S3ReadOnlyGroup
      LoginProfile:
        # Dynamic reference to the "password" field in the secret's JSON
        Password: !Sub "{{resolve:secretsmanager:${OneTimePasswordSecret}::password}}"
        PasswordResetRequired: true

  EC2User:
    Type: AWS::IAM::User
    Properties:
      UserName: !Ref EC2UserName
      Groups:
        - !Ref EC2ReadOnlyGroup
      LoginProfile:
        Password: !Sub "{{resolve:secretsmanager:${OneTimePasswordSecret}::password}}"
        PasswordResetRequired: true

Outputs:
  S3GroupNameOutput:
    Description: Name of the S3 group
    Value: !Ref S3ReadOnlyGroup

  EC2GroupNameOutput:
    Description: Name of the EC2 group
    Value: !Ref EC2ReadOnlyGroup

  S3UserOutput:
    Description: IAM user for S3 access
    Value: !Ref S3User

  EC2UserOutput:
    Description: IAM user for EC2 access
    Value: !Ref EC2User

  OneTimePasswordSecretArn:
    Description: ARN of the secret storing the shared OTP (key = "password")
    Value: !Ref OneTimePasswordSecret
